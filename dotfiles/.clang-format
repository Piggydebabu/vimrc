BasedOnStyle: LLVM
Standard: c++20
IndentWidth: 4
AccessModifierOffset: -4
ColumnLimit: 80
DeriveLineEnding: false
UseCRLF: false
# LineEnding: LF
# InsertNewlineAtEOF: true
UseTab: Never
TabWidth: 4
IndentCaseLabels: false
IndentCaseBlocks: false
IndentRequiresClause: true
BreakBeforeConceptDeclarations: Always
IndentAccessModifiers: false
AllowShortIfStatementsOnASingleLine: false
AllowShortEnumsOnASingleLine: false
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: true
AllowShortLambdasOnASingleLine: Inline
AllowAllArgumentsOnNextLine: true
AlignTrailingComments: true
AlignEscapedNewlines: true
AlignConsecutiveDeclarations: false
AllowShortFunctionsOnASingleLine: Empty
AlignOperands: true
LambdaBodyIndentation: Signature
NamespaceIndentation: None
PackConstructorInitializers: CurrentLine
EmptyLineBeforeAccessModifier: LogicalBlock
FixNamespaceComments: true
ReflowComments: false
SpaceAfterTemplateKeyword: true
SpaceBeforeRangeBasedForLoopColon: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeParens: ControlStatements
SpaceInEmptyBlock: false
AlwaysBreakTemplateDeclarations: true
# BreakTemplateDeclarations: Yes
SeparateDefinitionBlocks: Always
BreakBeforeBraces: Custom
BraceWrapping:
  AfterEnum: false
  AfterClass: false
  AfterStruct: false
  AfterUnion: false
  AfterFunction: false
  AfterControlStatement: false
  AfterCaseLabel: false
  SplitEmptyFunction: false
  BeforeCatch: false
  BeforeElse: false
DerivePointerAlignment: false
PointerAlignment: Right
ReferenceAlignment: Pointer
SortIncludes: false
SortUsingDeclarations: false
SpaceAroundPointerQualifiers: After
QualifierAlignment: Custom
QualifierOrder: ['static', 'inline', 'constexpr', 'type', 'const', 'volatile']
